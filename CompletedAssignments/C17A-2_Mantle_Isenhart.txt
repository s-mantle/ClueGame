Authors: Ben Isenhart & Sam Mantle
Section: OL (online)
Outside Sources: None
Other Information: NA

Git log:

commit 1b818f95515a98cc07d349d9c7e95370138a3b7c
Author: Sam Mantle <smantle10@gmail.com>
Date:   Mon Mar 11 14:24:50 2024 -0600

    Refactored to use roomMap.getCenterCell and remove roomCenterMap to reduce complexity

commit 911096e8057d33682e396e442006c0667820b42e
Author: Sam Mantle <smantle10@gmail.com>
Date:   Mon Mar 11 12:59:59 2024 -0600

    Refactored calAdjRooms to use if else chain, removed repeating logic from if statements for faster run time

commit 6127ed68d1db7c5a2e98d382d22a2e453e3afa34
Author: Albitr <isenhart.ben@gmail.com>
Date:   Mon Mar 11 12:19:15 2024 -0600

    Current work on assignment submission file

commit 604249d7d1e637f118631fd0beb9282f03d355d6
Author: Albitr <isenhart.ben@gmail.com>
Date:   Mon Mar 11 12:14:13 2024 -0600

    Added additional testing for a normal room cell's adjacency list

commit cb13f564d90608849ae9298d271cdb2ee1287c57
Author: Albitr <isenhart.ben@gmail.com>
Date:   Mon Mar 11 12:04:30 2024 -0600

    Updated loadSetupConfig() validation to be more restrictive

commit 0c4dd7c3df17980bbc2dec1426c76ec37c1f05ef
Author: Albitr <isenhart.ben@gmail.com>
Date:   Mon Mar 11 12:00:02 2024 -0600

    Removed latent construction/ debugging comments

commit 426ddeed88f5fb385467c2c1e9b3f9ea4db015ec
Author: Albitr <isenhart.ben@gmail.com>
Date:   Mon Mar 11 11:58:51 2024 -0600

    Updated class member variables to better utilize this. and theInstance.

commit 0c6e5f570f90ceda3346d1cc7fcfbb520eae141e
Author: Albitr <isenhart.ben@gmail.com>
Date:   Mon Mar 11 11:55:38 2024 -0600

    Refactored constructor to initialize additional values

commit ec8e71183b9e3bedd927ff6d031b4048273565bc
Author: Albitr <isenhart.ben@gmail.com>
Date:   Mon Mar 11 11:53:16 2024 -0600

    Refactored boolean member variables in BoardCell


Code Snippet:

	Before:
	None

	After:
	@Test
	public void testRoomCellNoAdjacencies() {
		// Blacksmithing Room
		board.calcTargets(board.getCell(1, 5), 1);
		Set<BoardCell> targets = board.getTargets();
		assertEquals(0, targets.size());
		// Testing adjacent cells
		assertTrue(!targets.contains(board.getCell(1,  4)));
		assertTrue(!targets.contains(board.getCell(1,  6)));
		assertTrue(!targets.contains(board.getCell(0,  5)));
		assertTrue(!targets.contains(board.getCell(2,  5)));
		// Testing center, label, and doorway cells associated with this room
		assertTrue(!targets.contains(board.getCell(2,  6)));
		assertTrue(!targets.contains(board.getCell(1,  6)));
		assertTrue(!targets.contains(board.getCell(3,  5)));
		assertTrue(!targets.contains(board.getCell(3,  8)));

		// Engine Room
		board.calcTargets(board.getCell(14, 12), 1);
		targets = board.getTargets();
		assertEquals(0, targets.size());
		// Testing adjacent cells
		assertTrue(!targets.contains(board.getCell(14,  11)));
		assertTrue(!targets.contains(board.getCell(13,  12)));
		// Testing center, label, secret passage, and doorway cells associated with this room
		assertTrue(!targets.contains(board.getCell(13,  11)));
		assertTrue(!targets.contains(board.getCell(14,  10)));
		assertTrue(!targets.contains(board.getCell(11,  10)));
		assertTrue(!targets.contains(board.getCell(12,  12)));
	}

Our largest update to the program (aside from fleshing out existing comments) was the addition of a test case to ensure that normal room cells (not center, not label, not secret passage) had no adjacency list. One of our Code Review partners this past Friday pointed out this potential to use and we agreed it needed testing to validate that we were not creating unnessecary adjacency lists to bloat our code. As a result, we added the above pair of cells to test which ensures that room cells - aside from the center cell - do not have any ability to be moved to nor from.